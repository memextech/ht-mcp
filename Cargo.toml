[workspace]
members = [".", "ht-core"]
resolver = "2"

[package]
name = "ht-mcp"
version = "0.1.0"
edition = "2021"
rust-version = "1.70"
license = "MIT"
description = "Pure Rust MCP server for headless terminal interactions with embedded HT library"
repository = "https://github.com/memextech/ht-mcp"
homepage = "https://github.com/memextech/ht-mcp"
documentation = "https://docs.rs/ht-mcp"
keywords = ["mcp", "terminal", "headless", "automation", "memex"]
categories = ["command-line-utilities", "development-tools", "api-bindings"]
authors = ["Memex Tech <opensource@memex.tech>"]
readme = "README.md"
include = [
    "src/**/*",
    "ht-core/**/*",
    "assets/**/*",
    "examples/**/*",
    "Cargo.toml",
    "README.md",
    "LICENSE",
    "CHANGELOG.md"
]

# Lints configuration
[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(ci)'] }

# Crate publishing metadata
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
# MCP SDK - using the official rust-sdk
rmcp = { git = "https://github.com/modelcontextprotocol/rust-sdk", features = ["server", "transport-io", "macros"] }

# Async runtime
tokio = { version = "1.0", features = ["full"] }
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Utilities
uuid = { version = "1.0", features = ["v4", "serde"] }
anyhow = "1.0"
thiserror = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
schemars = "0.8"
chrono = { version = "0.4", features = ["serde"] }

# CLI
clap = { version = "4.0", features = ["derive"] }

# Web server
axum = { version = "0.7", features = ["ws"] }
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "fs"] }
hyper = "1.0"

# Local HT library
ht-core = { version = "0.3.0", path = "./ht-core" }

[dev-dependencies]
tokio-test = "0.4"
tempfile = "3.0"

# [[bin]]
# name = "test_ht_lib"
# path = "test_ht_lib.rs"

[profile.release]
strip = true
